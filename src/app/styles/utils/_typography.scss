@import '~@angular/material/theming';

@function cc-typography-config(
    $font-family: 'Roboto, "Helvetica Neue", sans-serif',
    $display-4: mat-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),
    $display-3: mat-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),
    $display-2: mat-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),
    $display-1: mat-typography-level(34px, 40px, 400),
    $headline: mat-typography-level(24px, 32px, 400),
    $title: mat-typography-level(20px, 32px, 500),
    $subheading-2: mat-typography-level(16px, 28px, 400),
    $subheading-1: mat-typography-level(15px, 24px, 400),
    $body-2: mat-typography-level(14px, 24px, 500),
    $body-1: mat-typography-level(14px, 20px, 400),
    $caption: mat-typography-level(12px, 20px, 400),
    $button: mat-typography-level(14px, 14px, 500),
    $input: mat-typography-level(14px, 1.15, 400)
) {
    // Declare an initial map with all of the levels.
    $config: (
        display-4: $display-4,
        display-3: $display-3,
        display-2: $display-2,
        display-1: $display-1,
        headline: $headline,
        title: $title,
        subheading-2: $subheading-2,
        subheading-1: $subheading-1,
        body-2: $body-2,
        body-1: $body-1,
        caption: $caption,
        button: $button,
        input: $input,
    );

    // Loop through the levels and set the `font-family` of the ones that don't have one to the base.
    // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.
    @each $key, $level in $config {
        @if map-get($level, font-family) == null {
            $new-level: map-merge(
                $level,
                (
                    font-family: $font-family,
                )
            );
            $config: map-merge(
                $config,
                (
                    $key: $new-level,
                )
            );
        }
    }

    // Add the base font family to the config.
    @return map-merge(
        $config,
        (
            font-family: $font-family,
        )
    );
}

@mixin typo-truncate($width, $max-width) {
    width: $width;
    max-width: $max-width;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin cc-base-typography($config, $selector: '.cc-typography') {
    .cc-headline,
    #{$selector} h1 {
        @include mat-typography-level-to-styles($config, headline);
        margin: 0;
    }

    .cc-title,
    #{$selector} h2 {
        @include mat-typography-level-to-styles($config, title);
        margin: 0;
    }

    .cc-subheading-2,
    #{$selector} h3 {
        @include mat-typography-level-to-styles($config, subheading-2);
        margin: 0;
    }

    .cc-subheading-1,
    #{$selector} h4 {
        @include mat-typography-level-to-styles($config, subheading-1);
        margin: 0;
    }

    .cc-body-2 {
        @include mat-typography-level-to-styles($config, body-2);
    }

    .cc-body-1,
    #{$selector} {
        @include mat-typography-level-to-styles($config, body-1);

        p {
            margin: 0;
        }
    }

    .cc-caption {
        @include mat-typography-level-to-styles($config, caption);
    }

    .cc-display-4,
    #{$selector} .cc-display-4 {
        @include mat-typography-level-to-styles($config, display-4);
        margin: 0;
    }

    #{$selector} .cc-display-3 {
        @include mat-typography-level-to-styles($config, display-3);
        margin: 0;
    }

    .cc-display-2,
    #{$selector} .cc-display-2 {
        @include mat-typography-level-to-styles($config, display-2);
        margin: 0;
    }

    .cc-display-1,
    #{$selector} .cc-display-1 {
        @include mat-typography-level-to-styles($config, display-1);
        margin: 0;
    }
}
