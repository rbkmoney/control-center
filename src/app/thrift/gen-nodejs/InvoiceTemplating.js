//
// Autogenerated by Thrift Compiler (1.0.0-dev)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('woody_js/dist/thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var base_ttypes = require('./base_types');
var domain_ttypes = require('./domain_types');
var user_interaction_ttypes = require('./user_interaction_types');


var ttypes = require('./payment_processing_types');
//HELPER FUNCTIONS AND STRUCTURES

var InvoiceTemplating_Create_args = function(args) {
  this.user = null;
  this.params = null;
  if (args) {
    if (args.user !== undefined && args.user !== null) {
      this.user = new ttypes.UserInfo(args.user);
    }
    if (args.params !== undefined && args.params !== null) {
      this.params = new ttypes.InvoiceTemplateCreateParams(args.params);
    }
  }
};
InvoiceTemplating_Create_args.prototype = {};
InvoiceTemplating_Create_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.user = new ttypes.UserInfo();
        this.user.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.params = new ttypes.InvoiceTemplateCreateParams();
        this.params.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InvoiceTemplating_Create_args.prototype.write = function(output) {
  output.writeStructBegin('InvoiceTemplating_Create_args');
  if (this.user !== null && this.user !== undefined) {
    output.writeFieldBegin('user', Thrift.Type.STRUCT, 1);
    this.user.write(output);
    output.writeFieldEnd();
  }
  if (this.params !== null && this.params !== undefined) {
    output.writeFieldBegin('params', Thrift.Type.STRUCT, 2);
    this.params.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var InvoiceTemplating_Create_result = function(args) {
  this.success = null;
  this.ex1 = null;
  this.ex2 = null;
  this.ex3 = null;
  this.ex4 = null;
  this.ex5 = null;
  this.ex6 = null;
  if (args instanceof ttypes.InvalidUser) {
    this.ex1 = args;
    return;
  }
  if (args instanceof ttypes.PartyNotFound) {
    this.ex2 = args;
    return;
  }
  if (args instanceof ttypes.InvalidPartyStatus) {
    this.ex3 = args;
    return;
  }
  if (args instanceof ttypes.ShopNotFound) {
    this.ex4 = args;
    return;
  }
  if (args instanceof ttypes.InvalidShopStatus) {
    this.ex5 = args;
    return;
  }
  if (args instanceof base_ttypes.InvalidRequest) {
    this.ex6 = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new domain_ttypes.InvoiceTemplate(args.success);
    }
    if (args.ex1 !== undefined && args.ex1 !== null) {
      this.ex1 = args.ex1;
    }
    if (args.ex2 !== undefined && args.ex2 !== null) {
      this.ex2 = args.ex2;
    }
    if (args.ex3 !== undefined && args.ex3 !== null) {
      this.ex3 = args.ex3;
    }
    if (args.ex4 !== undefined && args.ex4 !== null) {
      this.ex4 = args.ex4;
    }
    if (args.ex5 !== undefined && args.ex5 !== null) {
      this.ex5 = args.ex5;
    }
    if (args.ex6 !== undefined && args.ex6 !== null) {
      this.ex6 = args.ex6;
    }
  }
};
InvoiceTemplating_Create_result.prototype = {};
InvoiceTemplating_Create_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new domain_ttypes.InvoiceTemplate();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex1 = new ttypes.InvalidUser();
        this.ex1.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex2 = new ttypes.PartyNotFound();
        this.ex2.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex3 = new ttypes.InvalidPartyStatus();
        this.ex3.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex4 = new ttypes.ShopNotFound();
        this.ex4.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex5 = new ttypes.InvalidShopStatus();
        this.ex5.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex6 = new base_ttypes.InvalidRequest();
        this.ex6.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InvoiceTemplating_Create_result.prototype.write = function(output) {
  output.writeStructBegin('InvoiceTemplating_Create_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.ex1 !== null && this.ex1 !== undefined) {
    output.writeFieldBegin('ex1', Thrift.Type.STRUCT, 1);
    this.ex1.write(output);
    output.writeFieldEnd();
  }
  if (this.ex2 !== null && this.ex2 !== undefined) {
    output.writeFieldBegin('ex2', Thrift.Type.STRUCT, 2);
    this.ex2.write(output);
    output.writeFieldEnd();
  }
  if (this.ex3 !== null && this.ex3 !== undefined) {
    output.writeFieldBegin('ex3', Thrift.Type.STRUCT, 3);
    this.ex3.write(output);
    output.writeFieldEnd();
  }
  if (this.ex4 !== null && this.ex4 !== undefined) {
    output.writeFieldBegin('ex4', Thrift.Type.STRUCT, 4);
    this.ex4.write(output);
    output.writeFieldEnd();
  }
  if (this.ex5 !== null && this.ex5 !== undefined) {
    output.writeFieldBegin('ex5', Thrift.Type.STRUCT, 5);
    this.ex5.write(output);
    output.writeFieldEnd();
  }
  if (this.ex6 !== null && this.ex6 !== undefined) {
    output.writeFieldBegin('ex6', Thrift.Type.STRUCT, 6);
    this.ex6.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var InvoiceTemplating_Get_args = function(args) {
  this.user = null;
  this.id = null;
  if (args) {
    if (args.user !== undefined && args.user !== null) {
      this.user = new ttypes.UserInfo(args.user);
    }
    if (args.id !== undefined && args.id !== null) {
      this.id = args.id;
    }
  }
};
InvoiceTemplating_Get_args.prototype = {};
InvoiceTemplating_Get_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.user = new ttypes.UserInfo();
        this.user.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.id = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InvoiceTemplating_Get_args.prototype.write = function(output) {
  output.writeStructBegin('InvoiceTemplating_Get_args');
  if (this.user !== null && this.user !== undefined) {
    output.writeFieldBegin('user', Thrift.Type.STRUCT, 1);
    this.user.write(output);
    output.writeFieldEnd();
  }
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.STRING, 2);
    output.writeString(this.id);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var InvoiceTemplating_Get_result = function(args) {
  this.success = null;
  this.ex1 = null;
  this.ex2 = null;
  this.ex3 = null;
  if (args instanceof ttypes.InvalidUser) {
    this.ex1 = args;
    return;
  }
  if (args instanceof ttypes.InvoiceTemplateNotFound) {
    this.ex2 = args;
    return;
  }
  if (args instanceof ttypes.InvoiceTemplateRemoved) {
    this.ex3 = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new domain_ttypes.InvoiceTemplate(args.success);
    }
    if (args.ex1 !== undefined && args.ex1 !== null) {
      this.ex1 = args.ex1;
    }
    if (args.ex2 !== undefined && args.ex2 !== null) {
      this.ex2 = args.ex2;
    }
    if (args.ex3 !== undefined && args.ex3 !== null) {
      this.ex3 = args.ex3;
    }
  }
};
InvoiceTemplating_Get_result.prototype = {};
InvoiceTemplating_Get_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new domain_ttypes.InvoiceTemplate();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex1 = new ttypes.InvalidUser();
        this.ex1.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex2 = new ttypes.InvoiceTemplateNotFound();
        this.ex2.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex3 = new ttypes.InvoiceTemplateRemoved();
        this.ex3.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InvoiceTemplating_Get_result.prototype.write = function(output) {
  output.writeStructBegin('InvoiceTemplating_Get_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.ex1 !== null && this.ex1 !== undefined) {
    output.writeFieldBegin('ex1', Thrift.Type.STRUCT, 1);
    this.ex1.write(output);
    output.writeFieldEnd();
  }
  if (this.ex2 !== null && this.ex2 !== undefined) {
    output.writeFieldBegin('ex2', Thrift.Type.STRUCT, 2);
    this.ex2.write(output);
    output.writeFieldEnd();
  }
  if (this.ex3 !== null && this.ex3 !== undefined) {
    output.writeFieldBegin('ex3', Thrift.Type.STRUCT, 3);
    this.ex3.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var InvoiceTemplating_Update_args = function(args) {
  this.user = null;
  this.id = null;
  this.params = null;
  if (args) {
    if (args.user !== undefined && args.user !== null) {
      this.user = new ttypes.UserInfo(args.user);
    }
    if (args.id !== undefined && args.id !== null) {
      this.id = args.id;
    }
    if (args.params !== undefined && args.params !== null) {
      this.params = new ttypes.InvoiceTemplateUpdateParams(args.params);
    }
  }
};
InvoiceTemplating_Update_args.prototype = {};
InvoiceTemplating_Update_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.user = new ttypes.UserInfo();
        this.user.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.id = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.params = new ttypes.InvoiceTemplateUpdateParams();
        this.params.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InvoiceTemplating_Update_args.prototype.write = function(output) {
  output.writeStructBegin('InvoiceTemplating_Update_args');
  if (this.user !== null && this.user !== undefined) {
    output.writeFieldBegin('user', Thrift.Type.STRUCT, 1);
    this.user.write(output);
    output.writeFieldEnd();
  }
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.STRING, 2);
    output.writeString(this.id);
    output.writeFieldEnd();
  }
  if (this.params !== null && this.params !== undefined) {
    output.writeFieldBegin('params', Thrift.Type.STRUCT, 3);
    this.params.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var InvoiceTemplating_Update_result = function(args) {
  this.success = null;
  this.ex1 = null;
  this.ex2 = null;
  this.ex3 = null;
  this.ex4 = null;
  this.ex5 = null;
  this.ex6 = null;
  if (args instanceof ttypes.InvalidUser) {
    this.ex1 = args;
    return;
  }
  if (args instanceof ttypes.InvoiceTemplateNotFound) {
    this.ex2 = args;
    return;
  }
  if (args instanceof ttypes.InvoiceTemplateRemoved) {
    this.ex3 = args;
    return;
  }
  if (args instanceof ttypes.InvalidPartyStatus) {
    this.ex4 = args;
    return;
  }
  if (args instanceof ttypes.InvalidShopStatus) {
    this.ex5 = args;
    return;
  }
  if (args instanceof base_ttypes.InvalidRequest) {
    this.ex6 = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new domain_ttypes.InvoiceTemplate(args.success);
    }
    if (args.ex1 !== undefined && args.ex1 !== null) {
      this.ex1 = args.ex1;
    }
    if (args.ex2 !== undefined && args.ex2 !== null) {
      this.ex2 = args.ex2;
    }
    if (args.ex3 !== undefined && args.ex3 !== null) {
      this.ex3 = args.ex3;
    }
    if (args.ex4 !== undefined && args.ex4 !== null) {
      this.ex4 = args.ex4;
    }
    if (args.ex5 !== undefined && args.ex5 !== null) {
      this.ex5 = args.ex5;
    }
    if (args.ex6 !== undefined && args.ex6 !== null) {
      this.ex6 = args.ex6;
    }
  }
};
InvoiceTemplating_Update_result.prototype = {};
InvoiceTemplating_Update_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new domain_ttypes.InvoiceTemplate();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex1 = new ttypes.InvalidUser();
        this.ex1.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex2 = new ttypes.InvoiceTemplateNotFound();
        this.ex2.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex3 = new ttypes.InvoiceTemplateRemoved();
        this.ex3.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex4 = new ttypes.InvalidPartyStatus();
        this.ex4.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex5 = new ttypes.InvalidShopStatus();
        this.ex5.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex6 = new base_ttypes.InvalidRequest();
        this.ex6.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InvoiceTemplating_Update_result.prototype.write = function(output) {
  output.writeStructBegin('InvoiceTemplating_Update_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.ex1 !== null && this.ex1 !== undefined) {
    output.writeFieldBegin('ex1', Thrift.Type.STRUCT, 1);
    this.ex1.write(output);
    output.writeFieldEnd();
  }
  if (this.ex2 !== null && this.ex2 !== undefined) {
    output.writeFieldBegin('ex2', Thrift.Type.STRUCT, 2);
    this.ex2.write(output);
    output.writeFieldEnd();
  }
  if (this.ex3 !== null && this.ex3 !== undefined) {
    output.writeFieldBegin('ex3', Thrift.Type.STRUCT, 3);
    this.ex3.write(output);
    output.writeFieldEnd();
  }
  if (this.ex4 !== null && this.ex4 !== undefined) {
    output.writeFieldBegin('ex4', Thrift.Type.STRUCT, 4);
    this.ex4.write(output);
    output.writeFieldEnd();
  }
  if (this.ex5 !== null && this.ex5 !== undefined) {
    output.writeFieldBegin('ex5', Thrift.Type.STRUCT, 5);
    this.ex5.write(output);
    output.writeFieldEnd();
  }
  if (this.ex6 !== null && this.ex6 !== undefined) {
    output.writeFieldBegin('ex6', Thrift.Type.STRUCT, 6);
    this.ex6.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var InvoiceTemplating_Delete_args = function(args) {
  this.user = null;
  this.id = null;
  if (args) {
    if (args.user !== undefined && args.user !== null) {
      this.user = new ttypes.UserInfo(args.user);
    }
    if (args.id !== undefined && args.id !== null) {
      this.id = args.id;
    }
  }
};
InvoiceTemplating_Delete_args.prototype = {};
InvoiceTemplating_Delete_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.user = new ttypes.UserInfo();
        this.user.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.id = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InvoiceTemplating_Delete_args.prototype.write = function(output) {
  output.writeStructBegin('InvoiceTemplating_Delete_args');
  if (this.user !== null && this.user !== undefined) {
    output.writeFieldBegin('user', Thrift.Type.STRUCT, 1);
    this.user.write(output);
    output.writeFieldEnd();
  }
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.STRING, 2);
    output.writeString(this.id);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var InvoiceTemplating_Delete_result = function(args) {
  this.ex1 = null;
  this.ex2 = null;
  this.ex3 = null;
  this.ex4 = null;
  this.ex5 = null;
  if (args instanceof ttypes.InvalidUser) {
    this.ex1 = args;
    return;
  }
  if (args instanceof ttypes.InvoiceTemplateNotFound) {
    this.ex2 = args;
    return;
  }
  if (args instanceof ttypes.InvoiceTemplateRemoved) {
    this.ex3 = args;
    return;
  }
  if (args instanceof ttypes.InvalidPartyStatus) {
    this.ex4 = args;
    return;
  }
  if (args instanceof ttypes.InvalidShopStatus) {
    this.ex5 = args;
    return;
  }
  if (args) {
    if (args.ex1 !== undefined && args.ex1 !== null) {
      this.ex1 = args.ex1;
    }
    if (args.ex2 !== undefined && args.ex2 !== null) {
      this.ex2 = args.ex2;
    }
    if (args.ex3 !== undefined && args.ex3 !== null) {
      this.ex3 = args.ex3;
    }
    if (args.ex4 !== undefined && args.ex4 !== null) {
      this.ex4 = args.ex4;
    }
    if (args.ex5 !== undefined && args.ex5 !== null) {
      this.ex5 = args.ex5;
    }
  }
};
InvoiceTemplating_Delete_result.prototype = {};
InvoiceTemplating_Delete_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex1 = new ttypes.InvalidUser();
        this.ex1.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex2 = new ttypes.InvoiceTemplateNotFound();
        this.ex2.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex3 = new ttypes.InvoiceTemplateRemoved();
        this.ex3.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex4 = new ttypes.InvalidPartyStatus();
        this.ex4.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex5 = new ttypes.InvalidShopStatus();
        this.ex5.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InvoiceTemplating_Delete_result.prototype.write = function(output) {
  output.writeStructBegin('InvoiceTemplating_Delete_result');
  if (this.ex1 !== null && this.ex1 !== undefined) {
    output.writeFieldBegin('ex1', Thrift.Type.STRUCT, 1);
    this.ex1.write(output);
    output.writeFieldEnd();
  }
  if (this.ex2 !== null && this.ex2 !== undefined) {
    output.writeFieldBegin('ex2', Thrift.Type.STRUCT, 2);
    this.ex2.write(output);
    output.writeFieldEnd();
  }
  if (this.ex3 !== null && this.ex3 !== undefined) {
    output.writeFieldBegin('ex3', Thrift.Type.STRUCT, 3);
    this.ex3.write(output);
    output.writeFieldEnd();
  }
  if (this.ex4 !== null && this.ex4 !== undefined) {
    output.writeFieldBegin('ex4', Thrift.Type.STRUCT, 4);
    this.ex4.write(output);
    output.writeFieldEnd();
  }
  if (this.ex5 !== null && this.ex5 !== undefined) {
    output.writeFieldBegin('ex5', Thrift.Type.STRUCT, 5);
    this.ex5.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var InvoiceTemplating_ComputeTerms_args = function(args) {
  this.user = null;
  this.id = null;
  this.timestamp = null;
  if (args) {
    if (args.user !== undefined && args.user !== null) {
      this.user = new ttypes.UserInfo(args.user);
    }
    if (args.id !== undefined && args.id !== null) {
      this.id = args.id;
    }
    if (args.timestamp !== undefined && args.timestamp !== null) {
      this.timestamp = args.timestamp;
    }
  }
};
InvoiceTemplating_ComputeTerms_args.prototype = {};
InvoiceTemplating_ComputeTerms_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.user = new ttypes.UserInfo();
        this.user.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.id = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.timestamp = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InvoiceTemplating_ComputeTerms_args.prototype.write = function(output) {
  output.writeStructBegin('InvoiceTemplating_ComputeTerms_args');
  if (this.user !== null && this.user !== undefined) {
    output.writeFieldBegin('user', Thrift.Type.STRUCT, 1);
    this.user.write(output);
    output.writeFieldEnd();
  }
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.STRING, 2);
    output.writeString(this.id);
    output.writeFieldEnd();
  }
  if (this.timestamp !== null && this.timestamp !== undefined) {
    output.writeFieldBegin('timestamp', Thrift.Type.STRING, 3);
    output.writeString(this.timestamp);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var InvoiceTemplating_ComputeTerms_result = function(args) {
  this.success = null;
  this.ex1 = null;
  this.ex2 = null;
  this.ex3 = null;
  this.ex4 = null;
  if (args instanceof ttypes.InvalidUser) {
    this.ex1 = args;
    return;
  }
  if (args instanceof ttypes.InvoiceTemplateNotFound) {
    this.ex2 = args;
    return;
  }
  if (args instanceof ttypes.InvoiceTemplateRemoved) {
    this.ex3 = args;
    return;
  }
  if (args instanceof ttypes.PartyNotExistsYet) {
    this.ex4 = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new domain_ttypes.TermSet(args.success);
    }
    if (args.ex1 !== undefined && args.ex1 !== null) {
      this.ex1 = args.ex1;
    }
    if (args.ex2 !== undefined && args.ex2 !== null) {
      this.ex2 = args.ex2;
    }
    if (args.ex3 !== undefined && args.ex3 !== null) {
      this.ex3 = args.ex3;
    }
    if (args.ex4 !== undefined && args.ex4 !== null) {
      this.ex4 = args.ex4;
    }
  }
};
InvoiceTemplating_ComputeTerms_result.prototype = {};
InvoiceTemplating_ComputeTerms_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new domain_ttypes.TermSet();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex1 = new ttypes.InvalidUser();
        this.ex1.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex2 = new ttypes.InvoiceTemplateNotFound();
        this.ex2.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex3 = new ttypes.InvoiceTemplateRemoved();
        this.ex3.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex4 = new ttypes.PartyNotExistsYet();
        this.ex4.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InvoiceTemplating_ComputeTerms_result.prototype.write = function(output) {
  output.writeStructBegin('InvoiceTemplating_ComputeTerms_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.ex1 !== null && this.ex1 !== undefined) {
    output.writeFieldBegin('ex1', Thrift.Type.STRUCT, 1);
    this.ex1.write(output);
    output.writeFieldEnd();
  }
  if (this.ex2 !== null && this.ex2 !== undefined) {
    output.writeFieldBegin('ex2', Thrift.Type.STRUCT, 2);
    this.ex2.write(output);
    output.writeFieldEnd();
  }
  if (this.ex3 !== null && this.ex3 !== undefined) {
    output.writeFieldBegin('ex3', Thrift.Type.STRUCT, 3);
    this.ex3.write(output);
    output.writeFieldEnd();
  }
  if (this.ex4 !== null && this.ex4 !== undefined) {
    output.writeFieldBegin('ex4', Thrift.Type.STRUCT, 4);
    this.ex4.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var InvoiceTemplatingClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this._seqid = 0;
    this._reqs = {};
};
InvoiceTemplatingClient.prototype = {};
InvoiceTemplatingClient.prototype.seqid = function() { return this._seqid; }
InvoiceTemplatingClient.prototype.new_seqid = function() { return this._seqid += 1; }
InvoiceTemplatingClient.prototype.Create = function(user, params, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_Create(user, params);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_Create(user, params);
  }
};

InvoiceTemplatingClient.prototype.send_Create = function(user, params) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('Create', Thrift.MessageType.CALL, this.seqid());
  var args = new InvoiceTemplating_Create_args();
  args.user = user;
  args.params = params;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

InvoiceTemplatingClient.prototype.recv_Create = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new InvoiceTemplating_Create_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex1) {
    return callback(result.ex1);
  }
  if (null !== result.ex2) {
    return callback(result.ex2);
  }
  if (null !== result.ex3) {
    return callback(result.ex3);
  }
  if (null !== result.ex4) {
    return callback(result.ex4);
  }
  if (null !== result.ex5) {
    return callback(result.ex5);
  }
  if (null !== result.ex6) {
    return callback(result.ex6);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('Create failed: unknown result');
};
InvoiceTemplatingClient.prototype.Get = function(user, id, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_Get(user, id);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_Get(user, id);
  }
};

InvoiceTemplatingClient.prototype.send_Get = function(user, id) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('Get', Thrift.MessageType.CALL, this.seqid());
  var args = new InvoiceTemplating_Get_args();
  args.user = user;
  args.id = id;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

InvoiceTemplatingClient.prototype.recv_Get = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new InvoiceTemplating_Get_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex1) {
    return callback(result.ex1);
  }
  if (null !== result.ex2) {
    return callback(result.ex2);
  }
  if (null !== result.ex3) {
    return callback(result.ex3);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('Get failed: unknown result');
};
InvoiceTemplatingClient.prototype.Update = function(user, id, params, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_Update(user, id, params);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_Update(user, id, params);
  }
};

InvoiceTemplatingClient.prototype.send_Update = function(user, id, params) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('Update', Thrift.MessageType.CALL, this.seqid());
  var args = new InvoiceTemplating_Update_args();
  args.user = user;
  args.id = id;
  args.params = params;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

InvoiceTemplatingClient.prototype.recv_Update = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new InvoiceTemplating_Update_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex1) {
    return callback(result.ex1);
  }
  if (null !== result.ex2) {
    return callback(result.ex2);
  }
  if (null !== result.ex3) {
    return callback(result.ex3);
  }
  if (null !== result.ex4) {
    return callback(result.ex4);
  }
  if (null !== result.ex5) {
    return callback(result.ex5);
  }
  if (null !== result.ex6) {
    return callback(result.ex6);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('Update failed: unknown result');
};
InvoiceTemplatingClient.prototype.Delete = function(user, id, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_Delete(user, id);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_Delete(user, id);
  }
};

InvoiceTemplatingClient.prototype.send_Delete = function(user, id) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('Delete', Thrift.MessageType.CALL, this.seqid());
  var args = new InvoiceTemplating_Delete_args();
  args.user = user;
  args.id = id;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

InvoiceTemplatingClient.prototype.recv_Delete = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new InvoiceTemplating_Delete_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex1) {
    return callback(result.ex1);
  }
  if (null !== result.ex2) {
    return callback(result.ex2);
  }
  if (null !== result.ex3) {
    return callback(result.ex3);
  }
  if (null !== result.ex4) {
    return callback(result.ex4);
  }
  if (null !== result.ex5) {
    return callback(result.ex5);
  }
  callback(null)
};
InvoiceTemplatingClient.prototype.ComputeTerms = function(user, id, timestamp, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_ComputeTerms(user, id, timestamp);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_ComputeTerms(user, id, timestamp);
  }
};

InvoiceTemplatingClient.prototype.send_ComputeTerms = function(user, id, timestamp) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('ComputeTerms', Thrift.MessageType.CALL, this.seqid());
  var args = new InvoiceTemplating_ComputeTerms_args();
  args.user = user;
  args.id = id;
  args.timestamp = timestamp;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

InvoiceTemplatingClient.prototype.recv_ComputeTerms = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new InvoiceTemplating_ComputeTerms_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex1) {
    return callback(result.ex1);
  }
  if (null !== result.ex2) {
    return callback(result.ex2);
  }
  if (null !== result.ex3) {
    return callback(result.ex3);
  }
  if (null !== result.ex4) {
    return callback(result.ex4);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('ComputeTerms failed: unknown result');
};
var InvoiceTemplatingProcessor = exports.Processor = function(handler) {
  this._handler = handler
}
InvoiceTemplatingProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}

InvoiceTemplatingProcessor.prototype.process_Create = function(seqid, input, output) {
  var args = new InvoiceTemplating_Create_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.Create.length === 2) {
    Q.fcall(this._handler.Create, args.user, args.params)
      .then(function(result) {
        var result = new InvoiceTemplating_Create_result({success: result});
        output.writeMessageBegin("Create", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof ttypes.InvalidUser || err instanceof ttypes.PartyNotFound || err instanceof ttypes.InvalidPartyStatus || err instanceof ttypes.ShopNotFound || err instanceof ttypes.InvalidShopStatus || err instanceof base_ttypes.InvalidRequest) {
          var result = new InvoiceTemplating_Create_result(err);
          output.writeMessageBegin("Create", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("Create", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.Create(args.user, args.params, function (err, result) {
      if (err == null || err instanceof ttypes.InvalidUser || err instanceof ttypes.PartyNotFound || err instanceof ttypes.InvalidPartyStatus || err instanceof ttypes.ShopNotFound || err instanceof ttypes.InvalidShopStatus || err instanceof base_ttypes.InvalidRequest) {
        var result = new InvoiceTemplating_Create_result((err != null ? err : {success: result}));
        output.writeMessageBegin("Create", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("Create", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

InvoiceTemplatingProcessor.prototype.process_Get = function(seqid, input, output) {
  var args = new InvoiceTemplating_Get_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.Get.length === 2) {
    Q.fcall(this._handler.Get, args.user, args.id)
      .then(function(result) {
        var result = new InvoiceTemplating_Get_result({success: result});
        output.writeMessageBegin("Get", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof ttypes.InvalidUser || err instanceof ttypes.InvoiceTemplateNotFound || err instanceof ttypes.InvoiceTemplateRemoved) {
          var result = new InvoiceTemplating_Get_result(err);
          output.writeMessageBegin("Get", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("Get", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.Get(args.user, args.id, function (err, result) {
      if (err == null || err instanceof ttypes.InvalidUser || err instanceof ttypes.InvoiceTemplateNotFound || err instanceof ttypes.InvoiceTemplateRemoved) {
        var result = new InvoiceTemplating_Get_result((err != null ? err : {success: result}));
        output.writeMessageBegin("Get", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("Get", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

InvoiceTemplatingProcessor.prototype.process_Update = function(seqid, input, output) {
  var args = new InvoiceTemplating_Update_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.Update.length === 3) {
    Q.fcall(this._handler.Update, args.user, args.id, args.params)
      .then(function(result) {
        var result = new InvoiceTemplating_Update_result({success: result});
        output.writeMessageBegin("Update", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof ttypes.InvalidUser || err instanceof ttypes.InvoiceTemplateNotFound || err instanceof ttypes.InvoiceTemplateRemoved || err instanceof ttypes.InvalidPartyStatus || err instanceof ttypes.InvalidShopStatus || err instanceof base_ttypes.InvalidRequest) {
          var result = new InvoiceTemplating_Update_result(err);
          output.writeMessageBegin("Update", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("Update", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.Update(args.user, args.id, args.params, function (err, result) {
      if (err == null || err instanceof ttypes.InvalidUser || err instanceof ttypes.InvoiceTemplateNotFound || err instanceof ttypes.InvoiceTemplateRemoved || err instanceof ttypes.InvalidPartyStatus || err instanceof ttypes.InvalidShopStatus || err instanceof base_ttypes.InvalidRequest) {
        var result = new InvoiceTemplating_Update_result((err != null ? err : {success: result}));
        output.writeMessageBegin("Update", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("Update", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

InvoiceTemplatingProcessor.prototype.process_Delete = function(seqid, input, output) {
  var args = new InvoiceTemplating_Delete_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.Delete.length === 2) {
    Q.fcall(this._handler.Delete, args.user, args.id)
      .then(function(result) {
        var result = new InvoiceTemplating_Delete_result({success: result});
        output.writeMessageBegin("Delete", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof ttypes.InvalidUser || err instanceof ttypes.InvoiceTemplateNotFound || err instanceof ttypes.InvoiceTemplateRemoved || err instanceof ttypes.InvalidPartyStatus || err instanceof ttypes.InvalidShopStatus) {
          var result = new InvoiceTemplating_Delete_result(err);
          output.writeMessageBegin("Delete", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("Delete", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.Delete(args.user, args.id, function (err, result) {
      if (err == null || err instanceof ttypes.InvalidUser || err instanceof ttypes.InvoiceTemplateNotFound || err instanceof ttypes.InvoiceTemplateRemoved || err instanceof ttypes.InvalidPartyStatus || err instanceof ttypes.InvalidShopStatus) {
        var result = new InvoiceTemplating_Delete_result((err != null ? err : {success: result}));
        output.writeMessageBegin("Delete", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("Delete", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

InvoiceTemplatingProcessor.prototype.process_ComputeTerms = function(seqid, input, output) {
  var args = new InvoiceTemplating_ComputeTerms_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.ComputeTerms.length === 3) {
    Q.fcall(this._handler.ComputeTerms, args.user, args.id, args.timestamp)
      .then(function(result) {
        var result = new InvoiceTemplating_ComputeTerms_result({success: result});
        output.writeMessageBegin("ComputeTerms", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof ttypes.InvalidUser || err instanceof ttypes.InvoiceTemplateNotFound || err instanceof ttypes.InvoiceTemplateRemoved || err instanceof ttypes.PartyNotExistsYet) {
          var result = new InvoiceTemplating_ComputeTerms_result(err);
          output.writeMessageBegin("ComputeTerms", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("ComputeTerms", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.ComputeTerms(args.user, args.id, args.timestamp, function (err, result) {
      if (err == null || err instanceof ttypes.InvalidUser || err instanceof ttypes.InvoiceTemplateNotFound || err instanceof ttypes.InvoiceTemplateRemoved || err instanceof ttypes.PartyNotExistsYet) {
        var result = new InvoiceTemplating_ComputeTerms_result((err != null ? err : {success: result}));
        output.writeMessageBegin("ComputeTerms", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("ComputeTerms", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

